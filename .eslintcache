[{"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\index.js":"1","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\App.js":"2","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\routes\\HomeTab.js":"3","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Login\\index.js":"4","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Map\\index.js":"5","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseDetail\\index.js":"6","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\CityList\\index.js":"7","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Register\\index.js":"8","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Profile\\index.js":"9","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\index.js":"10","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Home\\index.js":"11","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\News\\index.js":"12","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\utils\\url.js":"13","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\utils\\request.js":"14","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\utils\\token.js":"15","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\NavHeader\\index.js":"16","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\utils\\index.js":"17","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\HousePackage\\index.js":"18","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\HouseItems\\index.js":"19","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\SearchHeader\\index.js":"20","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\Sticky\\index.js":"21","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\NoHouse\\index.js":"22","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\components\\Filter\\index.js":"23","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\components\\FilterPicker\\index.js":"24","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\components\\FilterMore\\index.js":"25","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\components\\FilterTitle\\index.js":"26","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\FilterFooter\\index.js":"27"},{"size":532,"mtime":1612707035634,"results":"28","hashOfConfig":"29"},{"size":1280,"mtime":1612703187155,"results":"30","hashOfConfig":"29"},{"size":2816,"mtime":1612703187186,"results":"31","hashOfConfig":"29"},{"size":3077,"mtime":1612703187170,"results":"32","hashOfConfig":"29"},{"size":7732,"mtime":1612707110853,"results":"33","hashOfConfig":"29"},{"size":9141,"mtime":1612703187170,"results":"34","hashOfConfig":"29"},{"size":6640,"mtime":1612710139081,"results":"35","hashOfConfig":"29"},{"size":3236,"mtime":1612703187186,"results":"36","hashOfConfig":"29"},{"size":5054,"mtime":1612707028925,"results":"37","hashOfConfig":"29"},{"size":6379,"mtime":1612710418519,"results":"38","hashOfConfig":"29"},{"size":5107,"mtime":1612708649475,"results":"39","hashOfConfig":"29"},{"size":1509,"mtime":1612703187170,"results":"40","hashOfConfig":"29"},{"size":71,"mtime":1612703187186,"results":"41","hashOfConfig":"29"},{"size":581,"mtime":1612703187186,"results":"42","hashOfConfig":"29"},{"size":447,"mtime":1612703187186,"results":"43","hashOfConfig":"29"},{"size":724,"mtime":1612703187170,"results":"44","hashOfConfig":"29"},{"size":1123,"mtime":1612703187186,"results":"45","hashOfConfig":"29"},{"size":3102,"mtime":1612703187155,"results":"46","hashOfConfig":"29"},{"size":1512,"mtime":1612703187155,"results":"47","hashOfConfig":"29"},{"size":1456,"mtime":1612703187170,"results":"48","hashOfConfig":"29"},{"size":2583,"mtime":1612710995797,"results":"49","hashOfConfig":"29"},{"size":501,"mtime":1612703187170,"results":"50","hashOfConfig":"29"},{"size":11526,"mtime":1612703187170,"results":"51","hashOfConfig":"29"},{"size":1581,"mtime":1612703187170,"results":"52","hashOfConfig":"29"},{"size":3538,"mtime":1612703187170,"results":"53","hashOfConfig":"29"},{"size":1130,"mtime":1612703187170,"results":"54","hashOfConfig":"29"},{"size":939,"mtime":1612703187155,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xsqjwt",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\App.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\routes\\HomeTab.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Login\\index.js",["115"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Map\\index.js",["116"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseDetail\\index.js",["117"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\CityList\\index.js",["118","119","120","121","122","123"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Register\\index.js",["124","125"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Profile\\index.js",["126","127"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\index.js",["128"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\Home\\index.js",["129"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\News\\index.js",["130","131"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\utils\\url.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\utils\\request.js",["132"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\utils\\token.js",["133"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\NavHeader\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\utils\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\HousePackage\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\HouseItems\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\SearchHeader\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\Sticky\\index.js",["134"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\NoHouse\\index.js",[],["135","136"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\components\\Filter\\index.js",["137"],"import React, { Component } from \"react\";\r\n\r\nimport FilterTitle from \"../FilterTitle\";\r\nimport FilterPicker from \"../FilterPicker\";\r\nimport FilterMore from \"../FilterMore\";\r\nimport request from \"../../../../utils/request\";\r\nimport styles from \"./index.module.css\";\r\nimport { getCurrentCity } from \"../../../../utils\";\r\nimport { isEqual } from \"lodash\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nconst titleSelectedStatus = {\r\n  area: false,\r\n  mode: false,\r\n  price: false,\r\n  more: false,\r\n};\r\n\r\nconst defaultValues = {\r\n  area: [\"area\", \"null\"],\r\n  mode: [\"null\"],\r\n  price: [\"null\"],\r\n  more: [],\r\n};\r\nexport default class Filter extends Component {\r\n  state = {\r\n    titleSelectedStatus,\r\n    openType: \"\",\r\n    filterObj: {},\r\n    selectedValues: {},\r\n  };\r\n  //隐藏对话框\r\n  onCancel = async (type, moreupdateflag) => {\r\n    //Cancel的时候\r\n    //type正确 但是要拿到selectedObj\r\n    //逻辑 点了取消以后 我们要返回其上一次的状态 而不是和确定一样\r\n    this.htmlbody.classList.remove(\"body-fixed\");\r\n    const { selectedValues } = this.state;\r\n    let selectedObj = {};\r\n    //点击取消和清除是不同的\r\n    //取消指的是返回上一次的状态\r\n    //清除指的是全都没了\r\n    if (type === \"more\") {\r\n      selectedObj = selectedValues[type];\r\n      //数据没有变化并且两次都是0 意味着不用改变 反过来就是需要改变\r\n      if (moreupdateflag) {\r\n        //清除more数组\r\n        const newselectedValues = { ...selectedValues, more: [] };\r\n        await this.setState({ selectedValues: newselectedValues });\r\n        //强制刷新数据\r\n        this.props.onFilter(this.filterForData(this.state.selectedValues));\r\n      }\r\n    } else {\r\n      //其他情况应该返回上一次的状态 具体来说就是不改变原有的selectedValues;\r\n      console.log(\"非more的情况\");\r\n      console.log(selectedValues);\r\n      selectedObj = selectedValues;\r\n    }\r\n    const newTitledSelectedStatus = this.checkIfHighLight(selectedObj, type);\r\n    this.setState({\r\n      openType: \"\",\r\n      titleSelectedStatus: newTitledSelectedStatus,\r\n    });\r\n  };\r\n\r\n  //辅助方法 判断是否应该高亮\r\n  checkIfHighLight = (selectedObj, type) => {\r\n    console.log(selectedObj);\r\n    console.log(\"type---\" + type);\r\n    const { titleSelectedStatus } = this.state;\r\n    const newTitledSelectedStatus = { ...titleSelectedStatus };\r\n    if (type !== \"more\") {\r\n      const selectVal = selectedObj[type];\r\n      if (\r\n        type === \"area\" &&\r\n        (selectVal.length !== 2 || selectVal[0] !== \"area\")\r\n      ) {\r\n        //选的是第一个区域\r\n        newTitledSelectedStatus[type] = true;\r\n      } else if (type === \"mode\" && selectVal[0] !== \"null\") {\r\n        newTitledSelectedStatus[type] = true;\r\n      } else if (type === \"price\" && selectVal[0] !== \"null\") {\r\n        newTitledSelectedStatus[type] = true;\r\n      } else {\r\n        //不做处理\r\n        newTitledSelectedStatus[type] = false;\r\n      }\r\n    } else if (type === \"more\") {\r\n      if (selectedObj.length > 0) {\r\n        //filterMore组件的处理\r\n        newTitledSelectedStatus[type] = true;\r\n      } else {\r\n        newTitledSelectedStatus[type] = false;\r\n      }\r\n    }\r\n    return newTitledSelectedStatus;\r\n  };\r\n\r\n  //保存内容\r\n  onSave = async (selectedObj, type) => {\r\n    // console.log(selectedObj);\r\n    this.htmlbody.classList.remove(\"body-fixed\");\r\n    const newTitledSelectedStatus = this.checkIfHighLight(selectedObj, type);\r\n    //selectedObj的type是more 我们就讨论一下\r\n    if (type === \"more\") {\r\n      //比较的是more下的数据有无更改 使用lodash\r\n      const isequal = isEqual(this.state.selectedValues.more, selectedObj);\r\n      if (isequal) {\r\n        //一样 意味着不需要更新\r\n        this.setState({\r\n          openType: \"\",\r\n        });\r\n        return;\r\n      }\r\n    } else {\r\n      const isequal = isEqual(this.state.selectedValues, selectedObj);\r\n      if (isequal) {\r\n        //一样 意味着不用更新\r\n        this.setState({\r\n          openType: \"\",\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    //使用await使得setState的异步回调变成同步 失了智\r\n    await this.setState((state) => {\r\n      const { selectedValues } = state;\r\n      if (type === \"more\") {\r\n        //比较一下和上次有没有不同\r\n        const newSelectedValues = { ...selectedValues, [type]: selectedObj };\r\n        // console.log(\"newSelectedValues===\");\r\n        // console.log(newSelectedValues);\r\n        return {\r\n          openType: \"\",\r\n          selectedValues: newSelectedValues,\r\n          titleSelectedStatus: newTitledSelectedStatus,\r\n        };\r\n      } else {\r\n        return {\r\n          openType: \"\",\r\n          selectedValues: selectedObj,\r\n          titleSelectedStatus: newTitledSelectedStatus,\r\n        };\r\n      }\r\n    });\r\n\r\n    //保存后就获取当前所有的数据\r\n    const filterOrigin = { ...this.state.selectedValues };\r\n    const reqdata = this.filterForData(filterOrigin);\r\n\r\n    // console.log(reqdata);\r\n    // debugger;\r\n    // 传递给父组件 获取数据\r\n    this.props.onFilter(reqdata);\r\n    //筛选数据并获取\r\n  };\r\n\r\n  filterForData = (filterOrigin) => {\r\n    const databag = {};\r\n    const { area, mode, price, more } = filterOrigin;\r\n    const areakey = area[0];\r\n    let areaValue = \"\";\r\n    if (area.length === 3) {\r\n      area[2] === \"null\" ? (areaValue = area[1]) : (areaValue = area[2]);\r\n    }\r\n    databag[areakey] = areaValue;\r\n\r\n    //方式和租金可以直接拿第一项 因为它只有一项\r\n    databag[\"rentType\"] = mode[0];\r\n    //这里就取一个数字\r\n    const price_num = price[0].substring(6);\r\n    databag[\"price\"] = price_num;\r\n    //更多是一个字符串 我们要用逗号分割 但它是一整个字符串\r\n    databag[\"more\"] = more.join(\",\");\r\n\r\n    // debugger;\r\n\r\n    return databag;\r\n  };\r\n\r\n  //方法\r\n  handleClick = (type) => {\r\n    //使得点击遮罩外不能滑动\r\n    this.htmlbody.classList.add(\"body-fixed\");\r\n\r\n    const { selectedValues, titleSelectedStatus } = this.state;\r\n    //创建新的标题选中状态对象\r\n    const newTitledSelectedStatus = { ...titleSelectedStatus };\r\n    //遍历标题选中状态对象\r\n    // console.log(selectedValues);\r\n    Object.keys(titleSelectedStatus).forEach((key) => {\r\n      if (key === type) {\r\n        //这是当前标题 让它高亮\r\n        newTitledSelectedStatus[key] = true;\r\n      } else {\r\n        const selectVal = selectedValues[key];\r\n        // console.log(\"selectVal:\" + selectVal + \"---key:\" + key);\r\n        // console.log(selectVal);\r\n        if (\r\n          key === \"area\" &&\r\n          (selectVal.length !== 2 || selectVal[0] !== \"area\")\r\n        ) {\r\n          //选的是第一个区域\r\n          newTitledSelectedStatus[key] = true;\r\n        } else if (key === \"mode\" && selectVal[0] !== \"null\") {\r\n          newTitledSelectedStatus[key] = true;\r\n        } else if (key === \"price\" && selectVal[0] !== \"null\") {\r\n          newTitledSelectedStatus[key] = true;\r\n        } else if (key === \"more\" && selectVal.length > 0) {\r\n          //filterMore组件的处理\r\n          newTitledSelectedStatus[key] = true;\r\n        } else {\r\n          //不做处理\r\n          newTitledSelectedStatus[key] = false;\r\n        }\r\n      }\r\n    });\r\n    // console.log(newTitledSelectedStatus);\r\n    this.setState((state) => {\r\n      return {\r\n        titleSelectedStatus: newTitledSelectedStatus,\r\n        openType: type,\r\n      };\r\n    });\r\n\r\n    // console.log(this.state.titleSelectedStatus);\r\n  };\r\n\r\n  shouldShowMask = () => {\r\n    const { openType } = this.state;\r\n    return openType === \"mode\" || openType === \"area\" || openType === \"price\";\r\n  };\r\n\r\n  changeFilterPickerSelected = (newSelectedValue) => {\r\n    this.setState({\r\n      selectedValues: newSelectedValue,\r\n    });\r\n  };\r\n\r\n  changeFilterMoreSelected = (newSelected) => {\r\n    const { selectedValues } = this.state;\r\n    const newSelectedValues = { ...selectedValues, more: newSelected };\r\n    this.setState({\r\n      selectedValues: newSelectedValues,\r\n    });\r\n  };\r\n\r\n  renderFilterPicker = () => {\r\n    const shouldshow = this.shouldShowMask();\r\n    if (!shouldshow) {\r\n      return null;\r\n    } else {\r\n      let data = [];\r\n      const { openType, filterObj } = this.state;\r\n      let cols = 3;\r\n      let defaultValue = this.state.selectedValues;\r\n      // console.log(\"default-value----\" + defaultValue);\r\n      switch (openType) {\r\n        case \"area\":\r\n          const { area, subway } = filterObj;\r\n          data = [area, subway];\r\n          cols = 3;\r\n          break;\r\n        case \"mode\":\r\n          const { rentType } = filterObj;\r\n          // console.log(rentType);\r\n          data = rentType;\r\n          cols = 1;\r\n          break;\r\n        case \"price\":\r\n          const { price } = filterObj;\r\n          data = price;\r\n          cols = 1;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      //这里要传过去所有的值\r\n      return (\r\n        <FilterPicker\r\n          onCancel={this.onCancel}\r\n          onSave={this.onSave}\r\n          data={data}\r\n          cols={cols}\r\n          type={this.state.openType}\r\n          defaultValue={defaultValue}\r\n          changeSelected={this.changeFilterPickerSelected}\r\n        ></FilterPicker>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderMask = () => {\r\n    return this.shouldShowMask() ? (\r\n      <Spring to={{ opacity: 1 }} from={{ opacity: 0 }}>\r\n        {(props) => {\r\n          return (\r\n            <div\r\n              style={props}\r\n              className={styles.mask}\r\n              onClick={() => {\r\n                this.onCancel(this.state.openType);\r\n              }}\r\n            ></div>\r\n          );\r\n        }}\r\n      </Spring>\r\n    ) : (\r\n      \"\"\r\n    );\r\n  };\r\n\r\n  getFilterData = async () => {\r\n    const res = await getCurrentCity();\r\n    const value = res[0].value;\r\n    const data = await request.get(\"/houses/condition\", {\r\n      params: { id: value },\r\n    });\r\n\r\n    this.setState({\r\n      filterObj: data,\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await this.getFilterData();\r\n    this.setState({\r\n      selectedValues: defaultValues,\r\n    });\r\n\r\n    //拿到body\r\n    this.htmlbody = document.body;\r\n    //更改padding值\r\n  }\r\n\r\n  renderFilterMore = () => {\r\n    const { openType, filterObj } = this.state;\r\n    if (openType !== \"more\") {\r\n      return;\r\n    } else {\r\n      const { roomType, oriented, floor, characteristic } = filterObj;\r\n      const data = { roomType, oriented, floor, characteristic };\r\n      const defaultValue = this.state.selectedValues.more;\r\n      // debugger;\r\n      return (\r\n        <FilterMore\r\n          data={data}\r\n          onSave={this.onSave}\r\n          type={openType}\r\n          defaultValue={defaultValue}\r\n          onleave={this.onCancel}\r\n          changeSelected={this.changeFilterMoreSelected}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 遮罩层 */}\r\n        {this.renderMask()}\r\n        <div className={styles.content}>\r\n          {/* 标题栏 */}\r\n          <FilterTitle\r\n            titleSelectedStatus={this.state.titleSelectedStatus}\r\n            handleClick={this.handleClick}\r\n          />\r\n\r\n          {/* 前三个菜单对应的内容： */}\r\n          {this.renderFilterPicker()}\r\n\r\n          {/* 最后一个菜单对应的内容： */}\r\n          {this.renderFilterMore()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\components\\FilterPicker\\index.js",["138"],"import React, { Component } from \"react\";\r\n\r\nimport { PickerView } from \"antd-mobile\";\r\n\r\nimport FilterFooter from \"../../../../components/FilterFooter\";\r\n\r\nexport default class FilterPicker extends Component {\r\n  state = {\r\n    value: \"\",\r\n    selectedValue: {},\r\n  };\r\n  componentDidMount() {\r\n    const { defaultValue, type } = this.props;\r\n    // console.log(defaultValue);\r\n    this.setState({\r\n      selectedValue: defaultValue,\r\n      value: defaultValue[type],\r\n    });\r\n\r\n    console.log(\"picker create\");\r\n  }\r\n  render() {\r\n    const {\r\n      onCancel,\r\n      onSave,\r\n      data,\r\n      cols,\r\n      type,\r\n      defaultValue,\r\n      changeSelected,\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        {/* 选择器组件： */}\r\n        <PickerView\r\n          data={data}\r\n          value={this.state.value}\r\n          cols={cols}\r\n          onChange={(newvalue) => {\r\n            this.setState((state, props) => {\r\n              const newSelected = { ...defaultValue, [type]: newvalue };\r\n              // //把这个东西给changeSelected\r\n              // changeSelected(newSelected);\r\n              return {\r\n                value: newvalue,\r\n                selectedValue: newSelected,\r\n              };\r\n            });\r\n          }}\r\n        />\r\n\r\n        {/* 底部按钮 */}\r\n        <FilterFooter\r\n          onCancel={() => {\r\n            onCancel(type);\r\n          }}\r\n          onOk={() => {\r\n            // console.log(this.state.selectedValue)\r\n            onSave(this.state.selectedValue, type);\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\components\\FilterMore\\index.js",["139"],"import React, { Component } from \"react\";\r\n\r\nimport FilterFooter from \"../../../../components/FilterFooter\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nexport default class FilterMore extends Component {\r\n  //在state中设置默认的defaultValue\r\n  state = {\r\n    selectedValue: this.props.defaultValue,\r\n  };\r\n  // 渲染标签\r\n  renderFilters(data) {\r\n    // 高亮类名： styles.tagActive\r\n    return data.map((item) => {\r\n      const { selectedValue } = this.state;\r\n      const isClicked = selectedValue.indexOf(item.value) > -1;\r\n      return (\r\n        <span\r\n          className={[styles.tag, isClicked ? styles.tagActive : \"\"].join(\" \")}\r\n          key={item.value}\r\n          onClick={() => {\r\n            this.onTagClick(item.value);\r\n          }}\r\n        >\r\n          {item.label}\r\n        </span>\r\n      );\r\n    });\r\n  }\r\n\r\n  //多个on-off的switch开关处理办法\r\n  onTagClick = (value) => {\r\n    const { selectedValue } = this.state;\r\n    const newselectedValue = [...selectedValue];\r\n    //没有当前项\r\n    if (selectedValue.indexOf(value) == -1) {\r\n      newselectedValue.push(value);\r\n    } else {\r\n      //有当前项 就删除数组中的这一项元素\r\n      const index = newselectedValue.findIndex((item) => item === value);\r\n      //splice的删除方法\r\n      newselectedValue.splice(index, 1);\r\n    }\r\n    //更新状态\r\n    this.setState({\r\n      selectedValue: newselectedValue,\r\n    });\r\n  };\r\n\r\n  //确定按钮的事件处理程序\r\n  onOk = () => {\r\n    //从props中取出内容\r\n    const { type, onSave } = this.props;\r\n    onSave(this.state.selectedValue, type);\r\n  };\r\n\r\n  render() {\r\n    const { roomType, oriented, floor, characteristic } = this.props.data;\r\n    const { onleave, type, changeSelected } = this.props;\r\n    // console.log(onleave);\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 遮罩层 */}\r\n        <div\r\n          className={styles.mask}\r\n          onClick={() => {\r\n            onleave(type);\r\n          }}\r\n        />\r\n\r\n        {/* 条件内容 */}\r\n        <div className={styles.tags}>\r\n          <dl className={styles.dl}>\r\n            <dt className={styles.dt}>户型</dt>\r\n            <dd className={styles.dd}>{this.renderFilters(roomType)}</dd>\r\n\r\n            <dt className={styles.dt}>朝向</dt>\r\n            <dd className={styles.dd}>{this.renderFilters(oriented)}</dd>\r\n\r\n            <dt className={styles.dt}>楼层</dt>\r\n            <dd className={styles.dd}>{this.renderFilters(floor)}</dd>\r\n\r\n            <dt className={styles.dt}>房屋亮点</dt>\r\n            <dd className={styles.dd}>{this.renderFilters(characteristic)}</dd>\r\n          </dl>\r\n        </div>\r\n\r\n        {/* 底部按钮 */}\r\n        <FilterFooter\r\n          className={styles.footer}\r\n          cancelText=\"清除\"\r\n          onCancel={async () => {\r\n            let flag = true;\r\n            //判断一下当前的selectedValue是否为空\r\n            if (this.state.selectedValue.length === 0) {\r\n              //其实不需要更新了,传回一个false;\r\n              flag = false;\r\n            }\r\n            //把type写死 因为只有这一个 需要更改的是父组件内more的状态 否则没有用\r\n            this.setState({ selectedValue: [] });\r\n            ////...需要改变父级状态 否则高亮没有效果\r\n            await changeSelected([]);\r\n\r\n            //这里的onCancel的名字叫做onleave\r\n            onleave(type, flag);\r\n          }}\r\n          onOk={this.onOk}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\pages\\HouseList\\components\\FilterTitle\\index.js",["140"],"import React from \"react\";\r\n\r\nimport { Flex } from \"antd-mobile\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./index.module.css\";\r\n\r\n// 条件筛选栏标题数组：\r\nconst titleList = [\r\n  { title: \"区域\", type: \"area\" },\r\n  { title: \"方式\", type: \"mode\" },\r\n  { title: \"租金\", type: \"price\" },\r\n  { title: \"筛选\", type: \"more\" },\r\n];\r\n\r\nexport default function FilterTitle({ titleSelectedStatus, handleClick }) {\r\n  return (\r\n    <Flex align=\"center\" className={styles.root}>\r\n      {titleList.map((item) => {\r\n        return (\r\n          <Flex.Item\r\n            key={item.type}\r\n            onClick={() => {\r\n              handleClick(item.type);\r\n            }}\r\n          >\r\n            {/* 选中类名： selected */}\r\n            <span\r\n              className={[\r\n                styles.dropdown,\r\n                titleSelectedStatus[item.type] ? styles.selected : \"\",\r\n              ].join(\" \")}\r\n            >\r\n              <span>{item.title}</span>\r\n              <i className=\"iconfont icon-arrow\" />\r\n            </span>\r\n          </Flex.Item>\r\n        );\r\n      })}\r\n    </Flex>\r\n  );\r\n}\r\n","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf_mobile\\src\\components\\FilterFooter\\index.js",[],{"ruleId":"141","severity":1,"message":"142","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"145","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":16},{"ruleId":"141","severity":1,"message":"146","line":167,"column":13,"nodeType":"143","messageId":"144","endLine":167,"endColumn":22},{"ruleId":"141","severity":1,"message":"147","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":16},{"ruleId":"141","severity":1,"message":"148","line":2,"column":18,"nodeType":"143","messageId":"144","endLine":2,"endColumn":22},{"ruleId":"141","severity":1,"message":"149","line":173,"column":23,"nodeType":"143","messageId":"144","endLine":173,"endColumn":34},{"ruleId":"141","severity":1,"message":"150","line":193,"column":13,"nodeType":"143","messageId":"144","endLine":193,"endColumn":21},{"ruleId":"141","severity":1,"message":"149","line":207,"column":17,"nodeType":"143","messageId":"144","endLine":207,"endColumn":28},{"ruleId":"141","severity":1,"message":"151","line":207,"column":30,"nodeType":"143","messageId":"144","endLine":207,"endColumn":39},{"ruleId":"141","severity":1,"message":"152","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":14},{"ruleId":"141","severity":1,"message":"153","line":53,"column":11,"nodeType":"143","messageId":"144","endLine":53,"endColumn":24},{"ruleId":"154","severity":1,"message":"155","line":88,"column":63,"nodeType":"156","messageId":"157","endLine":88,"endColumn":65},{"ruleId":"158","severity":1,"message":"159","line":191,"column":17,"nodeType":"160","messageId":"161","endLine":193,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":108,"column":17,"nodeType":"164","endLine":108,"endColumn":37},{"ruleId":"141","severity":1,"message":"165","line":2,"column":16,"nodeType":"143","messageId":"144","endLine":2,"endColumn":24},{"ruleId":"141","severity":1,"message":"166","line":2,"column":26,"nodeType":"143","messageId":"144","endLine":2,"endColumn":30},{"ruleId":"141","severity":1,"message":"167","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":18},{"ruleId":"141","severity":1,"message":"168","line":1,"column":10,"nodeType":"143","messageId":"144","endLine":1,"endColumn":14},{"ruleId":"169","severity":1,"message":"170","line":65,"column":3,"nodeType":"171","messageId":"157","endLine":67,"endColumn":4},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":273,"column":9,"nodeType":"178","messageId":"179","endLine":274,"endColumn":17},{"ruleId":"141","severity":1,"message":"180","line":30,"column":7,"nodeType":"143","messageId":"144","endLine":30,"endColumn":21},{"ruleId":"154","severity":1,"message":"181","line":37,"column":38,"nodeType":"156","messageId":"157","endLine":37,"endColumn":40},{"ruleId":"141","severity":1,"message":"182","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":17},"no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'BASE_URL' is defined but never used.","'isLoading' is assigned a value but never used.","'NavBar' is defined but never used.","'Icon' is defined but never used.","'indexActive' is assigned a value but never used.","'cityList' is assigned a value but never used.","'cityIndex' is assigned a value but never used.","'Component' is defined but never used.","'alertInstance' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Carousel' is defined but never used.","'Grid' is defined but never used.","'getToken' is defined but never used.","'func' is defined but never used.","no-dupe-class-members","Duplicate name 'componentWillUnmount'.","MethodDefinition","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'changeSelected' is assigned a value but never used.","Expected '===' and instead saw '=='.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]