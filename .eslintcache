[{"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\index.js":"1","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\App.js":"2","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\routes\\HomeTab.js":"3","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\Map\\index.js":"4","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\CityList\\index.js":"5","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\Profile\\index.js":"6","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\News\\index.js":"7","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\index.js":"8","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\Home\\index.js":"9","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\components\\NavHeader\\index.js":"10","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\utils\\index.js":"11","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\utils\\url.js":"12","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\utils\\request.js":"13","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\components\\SearchHeader\\index.js":"14","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\components\\Filter\\index.js":"15","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\components\\FilterMore\\index.js":"16","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\components\\FilterTitle\\index.js":"17","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\components\\FilterPicker\\index.js":"18","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\components\\FilterFooter\\index.js":"19"},{"size":477,"mtime":1612428817105,"results":"20","hashOfConfig":"21"},{"size":854,"mtime":1612272423524,"results":"22","hashOfConfig":"21"},{"size":2816,"mtime":1612445087502,"results":"23","hashOfConfig":"21"},{"size":8393,"mtime":1612449579769,"results":"24","hashOfConfig":"21"},{"size":6728,"mtime":1612362746754,"results":"25","hashOfConfig":"21"},{"size":142,"mtime":1612235058316,"results":"26","hashOfConfig":"21"},{"size":136,"mtime":1612235004090,"results":"27","hashOfConfig":"21"},{"size":1128,"mtime":1612449710361,"results":"28","hashOfConfig":"21"},{"size":4787,"mtime":1612433785362,"results":"29","hashOfConfig":"21"},{"size":647,"mtime":1612362579831,"results":"30","hashOfConfig":"21"},{"size":1123,"mtime":1612371461487,"results":"31","hashOfConfig":"21"},{"size":71,"mtime":1612428803558,"results":"32","hashOfConfig":"21"},{"size":145,"mtime":1612429365019,"results":"33","hashOfConfig":"21"},{"size":1453,"mtime":1612487076178,"results":"34","hashOfConfig":"21"},{"size":7917,"mtime":1612534604133,"results":"35","hashOfConfig":"21"},{"size":3178,"mtime":1612532808178,"results":"36","hashOfConfig":"21"},{"size":1130,"mtime":1612510738011,"results":"37","hashOfConfig":"21"},{"size":1443,"mtime":1612533425457,"results":"38","hashOfConfig":"21"},{"size":939,"mtime":1612493884862,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10zijn8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\index.js",[],["83","84"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\App.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\routes\\HomeTab.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\Map\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\CityList\\index.js",["85","86","87","88","89","90"],"import React from \"react\";\r\nimport { NavBar, Icon, Toast } from \"antd-mobile\";\r\nimport axios from \"axios\";\r\nimport \"./index.css\";\r\nimport { getCurrentCity } from \"../../utils\";\r\nimport { List, AutoSizer } from \"react-virtualized\";\r\nimport NavHeader from \"../../components/NavHeader\";\r\n\r\nconst TILTE_HEIGHT = 36;\r\nconst CITY_HEIGHT = 50;\r\nconst formatCityIndex = (letter) => {\r\n  let returnLetter = \"\";\r\n  switch (letter) {\r\n    case \"#\":\r\n      returnLetter = \"当前定位\";\r\n      break;\r\n    case \"hot\":\r\n      returnLetter = \"热门城市\";\r\n      break;\r\n    default:\r\n      returnLetter = letter.toUpperCase();\r\n      break;\r\n  }\r\n\r\n  return returnLetter;\r\n};\r\n\r\nexport default class CityList extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cityIndex: [],\r\n      cityList: {},\r\n      indexActive: \"#\",\r\n      cityOffset: [],\r\n    };\r\n\r\n    this.cityListComponet = React.createRef();\r\n  }\r\n  formatCityList = (list) => {\r\n    const cityList = {};\r\n\r\n    list.forEach((item) => {\r\n      const first = item.short.substring(0, 1);\r\n      if (cityList[first]) {\r\n        //有这个分类\r\n        //直接往这个分类里面push数据\r\n        cityList[first].push(item);\r\n      } else {\r\n        cityList[first] = [item];\r\n      }\r\n    });\r\n\r\n    //获取索引数据\r\n\r\n    const cityIndex = Object.keys(cityList).sort();\r\n\r\n    return {\r\n      cityList,\r\n      cityIndex,\r\n    };\r\n  };\r\n  async getCityList() {\r\n    const { data } = await axios.get(\"http://localhost:8080/area/city\", {\r\n      params: { level: 1 },\r\n    });\r\n\r\n    const { body } = data;\r\n\r\n    const { cityList, cityIndex } = this.formatCityList(body);\r\n\r\n    //获取热门数据\r\n    const res = await axios.get(\"http://localhost:8080/area/hot\");\r\n    const hotres = res.data.body;\r\n\r\n    cityList[\"hot\"] = hotres;\r\n    cityIndex.unshift(\"hot\");\r\n\r\n    // console.log(cityList);\r\n    // console.log(cityIndex);\r\n\r\n    const curcity = await getCurrentCity();\r\n\r\n    cityList[\"#\"] = curcity;\r\n\r\n    cityIndex.unshift(\"#\");\r\n\r\n    //初始化cityOffset\r\n    const cityOffset = this.getCityOffset(cityIndex, cityList);\r\n    console.log(cityOffset);\r\n    this.setState({\r\n      cityList,\r\n      cityIndex,\r\n      cityOffset,\r\n    });\r\n\r\n    this.measureRows();\r\n  }\r\n\r\n  getCityOffset = (cityIndex, cityList) => {\r\n    const cityOffset = [];\r\n    cityOffset[0] = 0;\r\n    for (let i = 0; i < cityIndex.length - 1; i++) {\r\n      const itemHeight =\r\n        cityList[cityIndex[i]].length * CITY_HEIGHT + TILTE_HEIGHT;\r\n      cityOffset[i + 1] = cityOffset[i] + itemHeight;\r\n    }\r\n\r\n    return cityOffset;\r\n  };\r\n\r\n  measureRows = () => {\r\n    this.cityListComponet.current.measureAllRows();\r\n  };\r\n\r\n  getRowHeight = ({ index }) => {\r\n    //索引标题高度+城市数量*城市名称高度\r\n    const { cityList, cityIndex } = this.state;\r\n    return cityList[cityIndex[index]].length * CITY_HEIGHT + TILTE_HEIGHT;\r\n  };\r\n\r\n  changeCity = ({ label, value }) => {\r\n    const city = [\"北京\", \"上海\", \"广州\", \"深圳\"];\r\n    console.log(label);\r\n    const isfind = city.indexOf(label);\r\n    if (isfind > -1) {\r\n      localStorage.setItem(\"hkzf_city\", JSON.stringify({ label, value }));\r\n      this.props.history.go(-1);\r\n    } else {\r\n      //提示用户没有房源信息\r\n      Toast.info(\"该城市暂无房源信息\", 1.5);\r\n    }\r\n  };\r\n\r\n  rowRenderer = ({\r\n    key, // Unique key within array of rows\r\n    index, // 索引号\r\n    isScrolling, // 当前项是否正在滚动中\r\n    isVisible, // 当前项在列表中是否可见\r\n    style, // 样式 指定每一行在哪个位置\r\n  }) => {\r\n    const { cityList, cityIndex } = this.state;\r\n    const letter = cityIndex[index];\r\n    const citys = cityList[letter];\r\n    // console.log(citys);\r\n    // console.log(letter);\r\n    return (\r\n      <div key={key} style={style} className=\"city\">\r\n        <div className=\"title\">{formatCityIndex(letter)}</div>\r\n        {citys.map((item) => {\r\n          return (\r\n            <div\r\n              className=\"name\"\r\n              key={item.value}\r\n              onClick={() => {\r\n                this.changeCity(item);\r\n              }}\r\n            >\r\n              {item.label}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderCityIndex = () => {\r\n    const { cityIndex, indexActive } = this.state;\r\n    return cityIndex.map((item, index) => {\r\n      return (\r\n        <li\r\n          className=\"city-index-item\"\r\n          key={item}\r\n          onClick={() => {\r\n            this.setState((state, props) => {\r\n              const { indexActive } = state;\r\n              this.cityListComponet.current.scrollToRow(index);\r\n              return {\r\n                indexActive: item,\r\n              };\r\n            });\r\n\r\n            // console.log(item);\r\n          }}\r\n        >\r\n          <span className={indexActive === item ? \"index-active\" : \"\"}>\r\n            {item === \"hot\" ? \"热\" : item}\r\n          </span>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  onScrollChangeIndex = ({ startIndex, scrollTop }) => {\r\n    // //把滚动到的索引 判断值在哪几个之间\r\n    const { cityList, cityIndex, cityOffset } = this.state;\r\n    if (scrollTop <= cityOffset[cityOffset.length - 1] && scrollTop >= 86) {\r\n      for (let i = 0; i < cityOffset.length - 1; i++) {\r\n        if (Math.ceil(scrollTop) + 30 >= cityOffset[i + 1]) {\r\n          //问题出在微小的抖动上 需要调用天花板函数处理\r\n          this.setState((state, props) => {\r\n            return {\r\n              indexActive: cityIndex[i + 1],\r\n            };\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      this.setState((state, props) => {\r\n        const { indexActive, cityIndex } = state;\r\n        // console.log(cityIndex);\r\n        return {\r\n          indexActive: \"#\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCityList();\r\n    //必须等待异步执行完成 再调用measureAllRows()方法\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"cityList\">\r\n        <NavHeader>城市选择</NavHeader>\r\n\r\n        <AutoSizer>\r\n          {({ height, width }) => {\r\n            return (\r\n              <List\r\n                ref={this.cityListComponet}\r\n                height={height}\r\n                rowCount={this.state.cityIndex.length}\r\n                rowHeight={this.getRowHeight}\r\n                rowRenderer={this.rowRenderer}\r\n                width={width}\r\n                onScroll={this.onScrollChangeIndex}\r\n                scrollToAlignment=\"start\"\r\n              />\r\n            );\r\n          }}\r\n        </AutoSizer>\r\n        <ul className=\"city-index\">{this.renderCityIndex()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\Profile\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\News\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\Home\\index.js",["91"],"import React from \"react\";\r\nimport { Flex, Carousel, Grid, WingBlank } from \"antd-mobile\";\r\nimport request from \"../../utils/request\";\r\nimport Nav1 from \"../../assets/images/nav-1.png\";\r\nimport Nav2 from \"../../assets/images/nav-2.png\";\r\nimport Nav3 from \"../../assets/images/nav-3.png\";\r\nimport Nav4 from \"../../assets/images/nav-4.png\";\r\nimport \"./index.css\";\r\nimport BASE_URL from \"../../utils/url\";\r\nimport { getCurrentCity } from \"../../utils\";\r\nimport SearchHeader from \"../../components/SearchHeader\";\r\n\r\nconst navItem = [\r\n  { img: Nav1, title: \"整租\" },\r\n  { img: Nav2, title: \"合租\" },\r\n  { img: Nav3, title: \"地图找房\" },\r\n  { img: Nav4, title: \"去出租\" },\r\n];\r\n\r\nexport default class Home extends React.PureComponent {\r\n  state = {\r\n    data: [],\r\n    CarouselDidLoad: false,\r\n    groups: [],\r\n    news: [],\r\n    city: \"上海\",\r\n  };\r\n  async getNews() {\r\n    const { data } = await request.get(\"/home/news\", {\r\n      params: { area: \"AREA%7C88cff55c-aaa4-e2e0\" },\r\n    });\r\n\r\n    const { body } = data;\r\n    this.setState(() => {\r\n      return {\r\n        news: body,\r\n      };\r\n    });\r\n  }\r\n  async getGroup() {\r\n    const { data } = await request.get(\"/home/groups\", {\r\n      params: { area: \"AREA%7C88cff55c-aaa4-e2e0\" },\r\n    });\r\n\r\n    const { body } = data;\r\n\r\n    this.setState({\r\n      groups: body,\r\n    });\r\n  }\r\n\r\n  async getData() {\r\n    const { data } = await request.get(\"/home/swiper\");\r\n    const { body } = data;\r\n    this.setState({\r\n      data: body,\r\n      CarouselDidLoad: true,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n    this.getGroup();\r\n    this.getNews();\r\n\r\n    getCurrentCity().then((res) => {\r\n      this.setState({\r\n        city: res[0].label,\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"swiper\">\r\n          {this.state.CarouselDidLoad === true ? (\r\n            <Carousel autoplay={true} infinite autoplayInterval={5000}>\r\n              {this.state.data.map((val) => (\r\n                <img\r\n                  src={BASE_URL + val.imgSrc}\r\n                  alt=\"\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    verticalAlign: \"top\",\r\n                    height: \"212px\",\r\n                  }}\r\n                  key={val.id}\r\n                />\r\n              ))}\r\n            </Carousel>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <Flex className=\"nav-item\">\r\n          {navItem.map((item) => {\r\n            return (\r\n              <Flex.Item\r\n                key={item.title}\r\n                onClick={() => {\r\n                  this.props.history.push(\"/home/houselist\");\r\n                }}\r\n              >\r\n                <img src={item.img}></img>\r\n                <h3>{item.title}</h3>\r\n              </Flex.Item>\r\n            );\r\n          })}\r\n        </Flex>\r\n\r\n        <div className=\"group\">\r\n          <h3 className=\"group-title\">\r\n            租房小组 <span className=\"more\">更多</span>\r\n          </h3>\r\n          <Grid\r\n            columnNum={2}\r\n            data={this.state.groups}\r\n            square={false}\r\n            hasLine={false}\r\n            renderItem={(item) => {\r\n              return (\r\n                <Flex className=\"group-item\" justify=\"around\">\r\n                  <div className=\"desc\">\r\n                    <p className=\"title\">{item.title}</p>\r\n                    <span className=\"info\">{item.desc}</span>\r\n                  </div>\r\n                  <img src={`http://localhost:8080${item.imgSrc}`} alt=\"\" />\r\n                </Flex>\r\n              );\r\n            }}\r\n          ></Grid>\r\n        </div>\r\n        <div className=\"news\">\r\n          <h3 className=\"group-title\">最新资讯</h3>\r\n          <WingBlank size=\"md\">\r\n            {this.state.news.map((item) => {\r\n              return (\r\n                <div className=\"news-item\" key={item.id}>\r\n                  <div className=\"imgwrap\">\r\n                    <img\r\n                      className=\"img\"\r\n                      src={`http://localhost:8080${item.imgSrc}`}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <Flex\r\n                    className=\"content\"\r\n                    direction=\"column\"\r\n                    justify=\"between\"\r\n                  >\r\n                    <h3 className=\"title\">{item.title}</h3>\r\n                    <Flex className=\"info\" justify=\"between\">\r\n                      <span>{item.from}</span>\r\n                      <span>{item.date}</span>\r\n                    </Flex>\r\n                  </Flex>\r\n                </div>\r\n              );\r\n            })}\r\n          </WingBlank>\r\n        </div>\r\n        <SearchHeader city={this.state.city}></SearchHeader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\components\\NavHeader\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\utils\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\utils\\url.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\utils\\request.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\components\\SearchHeader\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\components\\Filter\\index.js",["92"],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\components\\FilterMore\\index.js",["93"],"import React, { Component } from \"react\";\r\n\r\nimport FilterFooter from \"../../../../components/FilterFooter\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\nexport default class FilterMore extends Component {\r\n  //在state中设置默认的defaultValue\r\n  state = {\r\n    selectedValue: this.props.defaultValue,\r\n  };\r\n  // 渲染标签\r\n  renderFilters(data) {\r\n    // 高亮类名： styles.tagActive\r\n    return data.map((item) => {\r\n      const { selectedValue } = this.state;\r\n      const isClicked = selectedValue.indexOf(item.value) > -1;\r\n      return (\r\n        <span\r\n          className={[styles.tag, isClicked ? styles.tagActive : \"\"].join(\" \")}\r\n          key={item.value}\r\n          onClick={() => {\r\n            this.onTagClick(item.value);\r\n          }}\r\n        >\r\n          {item.label}\r\n        </span>\r\n      );\r\n    });\r\n  }\r\n\r\n  //多个on-off的switch开关处理办法\r\n  onTagClick = (value) => {\r\n    const { selectedValue } = this.state;\r\n    const newselectedValue = [...selectedValue];\r\n    //没有当前项\r\n    if (selectedValue.indexOf(value) == -1) {\r\n      newselectedValue.push(value);\r\n    } else {\r\n      //有当前项 就删除数组中的这一项元素\r\n      const index = newselectedValue.findIndex((item) => item === value);\r\n      //splice的删除方法\r\n      newselectedValue.splice(index, 1);\r\n    }\r\n    //更新状态\r\n    this.setState({\r\n      selectedValue: newselectedValue,\r\n    });\r\n  };\r\n\r\n  //确定按钮的事件处理程序\r\n  onOk = () => {\r\n    //从props中取出内容\r\n    const { type, onSave } = this.props;\r\n    onSave(this.state.selectedValue, type);\r\n  };\r\n\r\n  onCancel = () => {\r\n    //取消的事件处理\r\n    this.setState({\r\n      selectedValue: [],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { roomType, oriented, floor, characteristic } = this.props.data;\r\n    const { onleave, type } = this.props;\r\n    // console.log(onleave);\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 遮罩层 */}\r\n        <div\r\n          className={styles.mask}\r\n          onClick={() => {\r\n            onleave(type);\r\n          }}\r\n        />\r\n\r\n        {/* 条件内容 */}\r\n        <div className={styles.tags}>\r\n          <dl className={styles.dl}>\r\n            <dt className={styles.dt}>户型</dt>\r\n            <dd className={styles.dd}>{this.renderFilters(roomType)}</dd>\r\n\r\n            <dt className={styles.dt}>朝向</dt>\r\n            <dd className={styles.dd}>{this.renderFilters(oriented)}</dd>\r\n\r\n            <dt className={styles.dt}>楼层</dt>\r\n            <dd className={styles.dd}>{this.renderFilters(floor)}</dd>\r\n\r\n            <dt className={styles.dt}>房屋亮点</dt>\r\n            <dd className={styles.dd}>{this.renderFilters(characteristic)}</dd>\r\n          </dl>\r\n        </div>\r\n\r\n        {/* 底部按钮 */}\r\n        <FilterFooter\r\n          className={styles.footer}\r\n          cancelText=\"清除\"\r\n          onCancel={() => {\r\n            //把type写死 因为只有这一个\r\n            this.onCancel();\r\n            //这里的onCancel的名字叫做onleave\r\n            onleave(type);\r\n          }}\r\n          onOk={this.onOk}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\components\\FilterTitle\\index.js",["94"],"import React from \"react\";\r\n\r\nimport { Flex } from \"antd-mobile\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./index.module.css\";\r\n\r\n// 条件筛选栏标题数组：\r\nconst titleList = [\r\n  { title: \"区域\", type: \"area\" },\r\n  { title: \"方式\", type: \"mode\" },\r\n  { title: \"租金\", type: \"price\" },\r\n  { title: \"筛选\", type: \"more\" },\r\n];\r\n\r\nexport default function FilterTitle({ titleSelectedStatus, handleClick }) {\r\n  return (\r\n    <Flex align=\"center\" className={styles.root}>\r\n      {titleList.map((item) => {\r\n        return (\r\n          <Flex.Item\r\n            key={item.type}\r\n            onClick={() => {\r\n              handleClick(item.type);\r\n            }}\r\n          >\r\n            {/* 选中类名： selected */}\r\n            <span\r\n              className={[\r\n                styles.dropdown,\r\n                titleSelectedStatus[item.type] ? styles.selected : \"\",\r\n              ].join(\" \")}\r\n            >\r\n              <span>{item.title}</span>\r\n              <i className=\"iconfont icon-arrow\" />\r\n            </span>\r\n          </Flex.Item>\r\n        );\r\n      })}\r\n    </Flex>\r\n  );\r\n}\r\n","C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\pages\\HouseList\\components\\FilterPicker\\index.js",[],"C:\\Users\\1\\Documents\\2021年寒假\\React Advanced\\hkzf-mobile\\src\\components\\FilterFooter\\index.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":16},{"ruleId":"99","severity":1,"message":"103","line":2,"column":18,"nodeType":"101","messageId":"102","endLine":2,"endColumn":22},{"ruleId":"99","severity":1,"message":"104","line":176,"column":23,"nodeType":"101","messageId":"102","endLine":176,"endColumn":34},{"ruleId":"99","severity":1,"message":"105","line":196,"column":13,"nodeType":"101","messageId":"102","endLine":196,"endColumn":21},{"ruleId":"99","severity":1,"message":"104","line":210,"column":17,"nodeType":"101","messageId":"102","endLine":210,"endColumn":28},{"ruleId":"99","severity":1,"message":"106","line":210,"column":30,"nodeType":"101","messageId":"102","endLine":210,"endColumn":39},{"ruleId":"107","severity":1,"message":"108","line":104,"column":17,"nodeType":"109","endLine":104,"endColumn":37},{"ruleId":"110","severity":1,"message":"111","line":184,"column":9,"nodeType":"112","messageId":"113","endLine":185,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":37,"column":38,"nodeType":"116","messageId":"117","endLine":37,"endColumn":40},{"ruleId":"99","severity":1,"message":"118","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":17},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'indexActive' is assigned a value but never used.","'cityList' is assigned a value but never used.","'cityIndex' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]